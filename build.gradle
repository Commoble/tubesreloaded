buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven {url='https://repo.spongepowered.org/repository/maven-public/'}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
	// https://github.com/johnrengelman/shadow
	// this version works on gradle 7.x
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java' // java plugin is needed for the shadow plugin to work
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = "commoble.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}-${mc_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets
{
	main
	test
	datagen
	generated
	gametest
}

// include resources generated from datagen in main
sourceSets.main.resources { srcDir 'src/generated/resources' }

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: "${mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'

            mods {
                tubesreloaded {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'

            mods {
                tubesreloaded {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'tubesreloaded', '--all', '--output', file('src/generated/resources/')

            mods {
                "tubesreloaded" {
                    source sourceSets.main
                    source sourceSets.datagen
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'tubesreloaded'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                tubesreloaded {
                    source sourceSets.main
                    source sourceSets.gametest
                }
            }
        }
    }
}

repositories {
	maven { url "https://cubicinterpolation.net/maven/" }
	maven { url "https://cursemaven.com" }
}

configurations {
	shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    
	implementation fg.deobf("commoble.databuddy:${databuddy_group}:${databuddy_version}:config")
	shade fg.deobf("commoble.databuddy:${databuddy_group}:${databuddy_version}:config")
	implementation fg.deobf("commoble.databuddy:${databuddy_group}:${databuddy_version}:datagen")
	shade fg.deobf("commoble.databuddy:${databuddy_group}:${databuddy_version}:datagen")
	
	implementation fg.deobf("commoble.useitemonblockevent:${useitemonblockevent_group}:${useitemonblockevent_version}")
	
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "Commoble",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Commoble",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
	classifier = ''
	configurations = [project.configurations.shade]
	relocate 'commoble.databuddy', "${project.group}.shadow.commoble.databuddy"
}

reobf {
    shadowJar { }
}

// this replaces jar.finalizedBy('reobfJar') in the standard forge mod buildscript
tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
